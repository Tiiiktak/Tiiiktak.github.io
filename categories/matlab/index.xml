<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MATLAB on Tiiktak&#39;s</title>
    <link>https://konosuba.xyz/categories/matlab/</link>
    <description>Recent content in MATLAB on Tiiktak&#39;s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language>
    <lastBuildDate>Sat, 11 Jan 2020 15:35:44 +0800</lastBuildDate><atom:link href="https://konosuba.xyz/categories/matlab/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MATLAB学习_函数</title>
      <link>https://konosuba.xyz/blog/matlab%E5%87%BD%E6%95%B0/</link>
      <pubDate>Sat, 11 Jan 2020 15:35:44 +0800</pubDate>
      
      <guid>https://konosuba.xyz/blog/matlab%E5%87%BD%E6%95%B0/</guid>
      <description>自定义函数 MATLAB可以在单独的.m文件中定义函数
比如有一文件myadd.m，文件中内容为
functiony =myadd(a, b)% 这里可以写函数的使用说明，前面以%开头 % 在工作区中，help myadd将显示此处的说明 y = a + b; end %可以略去 第一行function y = myadd(a, b) 告诉 MATLAB，这个函数将返回一个值，并且返回的这个值将被存放于变量y里。
另外，还可以得知这个函数有两个参数a和b，以及定义的函数体，即 y = a + b
 myadd是函数名。以m文件定义的函数必须保存为函数名的形式
  要使用 myadd函数，该函数必须在 Matlab 的搜索路径中。
 调用方式 只需在MATLAB中直接使用函数名调用，MATLAB会自动在其搜索路径中找到对应.m文件，例如
&amp;gt;&amp;gt; c = myadd(1, 2) c = 3 MORE MATLAB中允许定义的函数返回值是多个值或多个参数，只需在定义函数时写为
[y1, y2...] = function_name(x1, x2...)</description>
    </item>
    
    <item>
      <title>MATLAB学习_控制语句:for,while,if</title>
      <link>https://konosuba.xyz/blog/matlab%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/</link>
      <pubDate>Sat, 11 Jan 2020 15:02:35 +0800</pubDate>
      
      <guid>https://konosuba.xyz/blog/matlab%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/</guid>
      <description>for循环 首先我们定义一个向量v = zeros(10, 1)
接着我们写一个 “for&amp;quot; 循环，让v等于 1 到 10。设v(i)等于 2 的i次方，循环最后写上“end”。
&amp;gt;&amp;gt; for i = 1:10 v(i) = 2^i; end &amp;gt;&amp;gt; v v = 2 4 8 16 32 64 128 256 512 1024 同样也可以使用break，continue语句
while &amp;gt;&amp;gt; i = 1 &amp;gt;&amp;gt; while true, v(i) = 999; i = i+1; if i == 6, break; end; end; &amp;gt;&amp;gt; i i = 6 if-else &amp;gt;&amp;gt; if i == 5, disp(&amp;#34;hello&amp;#34;); elseif i == 4, disp(&amp;#34;world&amp;#34;); else disp(&amp;#34;hello, world&amp;#34;); end; hello, world &amp;gt;&amp;gt; </description>
    </item>
    
    <item>
      <title>MATLAB学习_数据绘图</title>
      <link>https://konosuba.xyz/blog/matlab%E7%BB%98%E5%9B%BE/</link>
      <pubDate>Sat, 11 Jan 2020 10:28:08 +0800</pubDate>
      
      <guid>https://konosuba.xyz/blog/matlab%E7%BB%98%E5%9B%BE/</guid>
      <description>当开发学习算法时，往往几个简单的图，可以让你更好地理解算法的内容，并且可以完整地检查下算法是否正常运行，是否达到了算法的目的。
二维绘图 我们先来快速生成一些数据用来绘图。
&amp;gt;&amp;gt; t = [0:0.01:0.98]; &amp;gt;&amp;gt; y1 = sin(2*pi*4*t); 如果我们想要绘制正弦函数，只需输入plot(t, y1)，如图
横轴是变量t，纵轴是y1，也就是我们刚刚所输出的正弦函数。
让我们设置y2
&amp;gt;&amp;gt; y2 = cos(2*pi*4*t); &amp;gt;&amp;gt; plot(t, y2) 如果要同时表示正弦和余弦曲线。
我们要做的就是，输入：plot(t, y1)，得到正弦函数，之后使用函数hold on，它的功能是将新的图像绘制在旧的之上
再输入：plot(t, y2)，MATLAB会自动用不同颜色绘制新的曲线，我们也可以指定颜色，比如plot(t, y2, &#39;r&#39;)，r表示使用红色绘制y2
 &amp;lsquo;r&amp;rsquo; 为线条设定。每个设定可包含表示线条颜色、样式和标记的字符。标记是在绘制的每个数据点上显示的符号，例如，+、o 或 * ；
  例如，&amp;lsquo;g:*&amp;rsquo; 请求绘制使用 * 标记的绿色点线。&amp;lsquo;r&amp;ndash;&amp;lsquo;请求红色虚线
 还可以使用命令xlabel(&#39;time&#39;)标记X轴，输入ylabel(&#39;value&#39;)标记Y轴的值。
同时我们也可以标记这两条函数曲线，用命令 legend(&#39;sin&#39;,&#39;cos&#39;)将这个图例放在右上方，表示这两条曲线表示的内容。最后输入title(&#39;myplot&#39;)，在图像的顶部显示这幅图的标题。
使用close命令可以关掉图像
 可以为图像标号
   使用figure(1); plot(t, y1);将显示第一张图，绘制了y1-t     使用figure(2); plot(t, y2);将显示第一张图，绘制了y2-t   subplot命令，我们使用subplot(1,2,1)，它将图像分为一个1*2的格子，也就是前两个参数，然后它使用第一个格子，也就是最后一个参数1的意思。
之后键入plot(t, y1)，y1-t图显示在第一个格子；
使用subplot(1, 2, 2); plot(t, y2)，y2-t图显示在第二个格子</description>
    </item>
    
    <item>
      <title>MATLAB学习_字符与字符串</title>
      <link>https://konosuba.xyz/blog/matlab%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Sat, 11 Jan 2020 10:13:09 +0800</pubDate>
      
      <guid>https://konosuba.xyz/blog/matlab%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>字符串 创建 t = &amp;#34;Hello, world&amp;#34;; 如果文本包含双引号，请在定义中使用两个双引号。
q = &amp;#34;Something &amp;#34;&amp;#34;quoted&amp;#34;&amp;#34; and something else.&amp;#34; t 和 q 为数组。它们的数据类型是 string。
&amp;gt;&amp;gt; whos t Name Size Bytes Class Attributes t 1x1 166 string  注意: 使用双引号创建字符串数组是在 R2017a 中引入的。
 行末添加 使用+运算符
&amp;gt;&amp;gt; t + &amp;#34;!&amp;#34; ans = &amp;#34;Hello, world!&amp;#34; 求长度 与数值数组类似，字符串数组可以有多个元素。
&amp;gt;&amp;gt; A = [&amp;#34;a&amp;#34;,&amp;#34;bb&amp;#34;,&amp;#34;ccc&amp;#34;; &amp;#34;dddd&amp;#34;,&amp;#34;eeeeee&amp;#34;,&amp;#34;fffffff&amp;#34;] A = 2×3 string 数组 &amp;#34;a&amp;#34; &amp;#34;bb&amp;#34; &amp;#34;ccc&amp;#34; &amp;#34;dddd&amp;#34; &amp;#34;eeeeee&amp;#34; &amp;#34;fffffff&amp;#34; 使用 strlength 函数求数组中每个字符串的长度。
&amp;gt;&amp;gt; strlength(A) ans = 1 2 3 4 6 7 字符 有时，字符表示的数据并不对应到文本，您可以将此类数据存储在数据类型为char 的字符数组中。字符数组使用单引号。</description>
    </item>
    
    <item>
      <title>MATLAB学习_操作数据</title>
      <link>https://konosuba.xyz/blog/matlab%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Fri, 10 Jan 2020 17:55:20 +0800</pubDate>
      
      <guid>https://konosuba.xyz/blog/matlab%E6%93%8D%E4%BD%9C/</guid>
      <description>文件操作 导入文件 当我们打开 MATLAB 时，我们通常已经在一个默认路径中，这个路径是 MATLAB 的安装位置，使用 pwd 命令可以显示出 MATLAB 当前所处路径。
使用cd命令，可以修改当前路径
使用&amp;rsquo;ls&amp;rsquo;命令，可以列出当前路劲中所有文件
要在MATLAB中导入数据文件，可以使用load命令，如：
&amp;gt;&amp;gt; load myData.dat % 或load(&amp;#39;myData.dat&amp;#39;) 之后可以直接输入myData，MATLAB便会打印文件中的数据，此时该文件名便作为一个新变量名
导出文件 退出 MATLAB 后，工作区变量不会保留。使用 save 命令保存数据以供将来使用，
save myfile.mat 通过保存，系统会使用 .mat 扩展名将工作区保存在当前工作文件夹中一个名为 MAT 文件的压缩文件中。
变量操作 “工作区”中包含了在MATLAB创建或从数据文件或其他程序导入的变量
例如先在工作区中创建变量A和B
A = eye(3) B = rand(2, 3) 使用who可以查看当前工作区中所有变量
&amp;gt;&amp;gt; who 您的变量为: A B 还有一个whos，能更详细的查看
&amp;gt;&amp;gt; whos Name Size Bytes Class Attributes A 3x3 72 double B 2x3 48 double 此外，在GUI窗口中也能查看
可以使用clear命令清除工作区中所有变量
数据操作 此时矩阵 A = [1 2; 3 4; 5 6] 是一个 3×2 的矩阵</description>
    </item>
    
    <item>
      <title>MATLAB学习_矩阵与向量操作</title>
      <link>https://konosuba.xyz/blog/matlab%E7%9F%A9%E9%98%B5/</link>
      <pubDate>Fri, 10 Jan 2020 15:35:53 +0800</pubDate>
      
      <guid>https://konosuba.xyz/blog/matlab%E7%9F%A9%E9%98%B5/</guid>
      <description>矩阵与向量的创建在上一篇文章中已经提到，所以这里直接进行操作和运算
运算 现有一矩阵a:
&amp;gt;&amp;gt; a = [1 2 3; 4 5 6; 7 8 10] a = 1 2 3 4 5 6 7 8 10 矩阵与常数相加
&amp;gt;&amp;gt; a + 10 ans = 11 12 13 14 15 16 17 18 20 &amp;gt;&amp;gt; sin(a) ans = 0.8415 0.9093 0.1411 -0.7568 -0.9589 -0.2794 0.6570 0.9894 -0.5440 转置矩阵 &amp;gt;&amp;gt;a&amp;#39; ans = 1 4 7 2 5 8 3 6 10 逆矩阵 &amp;gt;&amp;gt; inv(a) ans = -0.</description>
    </item>
    
  </channel>
</rss>
